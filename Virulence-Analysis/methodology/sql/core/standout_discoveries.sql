CACHE TABLE GENUS_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL;

CACHE TABLE DOMAIN_ARCHITECTURE;

CACHE TABLE PROTEIN_DETAILS;

CACHE TABLE PROTEIN_DOMAIN_ARCHITECTURE;

DROP TABLE IF EXISTS STANDOUT_DISCOVERIES;

CREATE TABLE STANDOUT_DISCOVERIES
  USING PARQUET
  AS
  SELECT
    NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY,
    SUM(COUNT) AS COUNT
    FROM
      GENUS_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL
      WHERE
        NEIGHBOR_TYPE = 'D'
      GROUP BY
        NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY;

CACHE TABLE STANDOUT_DISCOVERIES;

SELECT
  COUNT(1) AS NUM_ROWS,
  COUNT(DISTINCT NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY) AS NUM_DISTINCT_DISCOVERIES
  FROM
    STANDOUT_DISCOVERIES;

SELECT *
  FROM
    STANDOUT_DISCOVERIES
    ORDER BY 2 DESC
    LIMIT 10;

DROP TABLE IF EXISTS STANDOUT_DISCOVERIES_PROTEIN;

CREATE TABLE STANDOUT_DISCOVERIES_PROTEIN
  USING PARQUET
  AS
  SELECT
    A.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY,
    C.PROTEIN_FULLNAME
    FROM
      STANDOUT_DISCOVERIES A
      INNER JOIN PROTEIN_DOMAIN_ARCHITECTURE B ON
        B.DOMAIN_ARCHITECTURE_UID_KEY = A.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY
      INNER JOIN PROTEIN_DETAILS C ON
        C.PROTEIN_UID_KEY = B.PROTEIN_UID_KEY
      GROUP BY
        A.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY,
        C.PROTEIN_FULLNAME;

CACHE TABLE STANDOUT_DISCOVERIES_PROTEIN;

SELECT
  COUNT(1) AS NUM_ROWS,
  COUNT(DISTINCT NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY) AS NUM_DISTINCT_DISCOVERIES,
  COUNT(DISTINCT PROTEIN_FULLNAME) AS NUM_DISTINCT_PROTEIN_NAMES
  FROM
    STANDOUT_DISCOVERIES_PROTEIN;

SELECT *
  FROM
    STANDOUT_DISCOVERIES_PROTEIN
    ORDER BY 1, 2
    LIMIT 10;

DROP TABLE IF EXISTS STANDOUT_DISCOVERIES_IPR;

CREATE TABLE STANDOUT_DISCOVERIES_IPR
  USING PARQUET
  AS
  SELECT
    A.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY,
    EXPLODE(B.DOMAIN_ARCHITECTURE) AS IPR
    FROM
      STANDOUT_DISCOVERIES A
      INNER JOIN DOMAIN_ARCHITECTURE B ON
        B.DOMAIN_ARCHITECTURE_UID_KEY = A.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY
      GROUP BY
        A.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY,
        2;

CACHE TABLE STANDOUT_DISCOVERIES_IPR;

SELECT
  COUNT(1) AS NUM_ROWS,
  COUNT(DISTINCT NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY) AS NUM_DISTINCT_DISCOVERIES,
  COUNT(DISTINCT IPR) AS NUM_DISTINCT_IPRS
  FROM
    STANDOUT_DISCOVERIES_IPR;

SELECT *
  FROM
    STANDOUT_DISCOVERIES_IPR
    ORDER BY 1, 2
    LIMIT 10;
