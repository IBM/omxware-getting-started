CACHE TABLE GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT;

CACHE TABLE GENOME_TABLE;

DROP TABLE IF EXISTS GENUS_PIVOT_NEIGHBOR_DOMAIN_COUNT;

CREATE TABLE GENUS_PIVOT_NEIGHBOR_DOMAIN_COUNT
  USING PARQUET
  AS
  SELECT
    A.GENUS_NAME,
    B.PIVOT_DOMAIN_ARCHITECTURE_UID_KEY,
    B.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY,
    B.NEIGHBOR_TYPE,
    SUM(B.COUNT) AS COUNT
    FROM
      GENOME_TABLE A
      INNER JOIN GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT B ON
        B.ACCESSION_NUMBER = A.ACCESSION_NUMBER
      GROUP BY
        A.GENUS_NAME,
        B.PIVOT_DOMAIN_ARCHITECTURE_UID_KEY,
        B.NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY,
        B.NEIGHBOR_TYPE;

CACHE TABLE GENUS_PIVOT_NEIGHBOR_DOMAIN_COUNT;

SELECT
  COUNT(1) AS NUM_ROWS,
  COUNT(DISTINCT GENUS_NAME) AS NUM_DISTINCT_GENERA,
  COUNT(DISTINCT PIVOT_DOMAIN_ARCHITECTURE_UID_KEY) AS NUM_DISTINCT_PIVOT_DAS,
  COUNT(DISTINCT NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY) AS NUM_DISTINCT_NEIGHBOR_DAS
  FROM
    GENUS_PIVOT_NEIGHBOR_DOMAIN_COUNT;

SELECT *
  FROM
    GENUS_PIVOT_NEIGHBOR_DOMAIN_COUNT
    ORDER BY 1, 5 DESC
    LIMIT 10;
