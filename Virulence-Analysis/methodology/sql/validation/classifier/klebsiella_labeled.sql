@sql/settings.sql;

DROP TABLE IF EXISTS KLEBSIELLA_LABELED;

CREATE TABLE KLEBSIELLA_LABELED (
  ACCESSION_NUMBER STRING,
  ISOLATION_SOURCE STRING,
  HOST STRING,
  IS_HAISEQ STRING,
  ISOLATION_SOURCE_RAW STRING,
  VIRULENCE_CATEGORY2 STRING)
    USING csv
    OPTIONS (
      header true,
      path '${root_dir}/validation/classifier/files/klebsiella_labeled_updated.csv');

CACHE TABLE KLEBSIELLA_LABELED;

SELECT
  COUNT(1) AS NUM_ROWS,
  COUNT(DISTINCT ACCESSION_NUMBER) AS NUM_DISTINCT_GENOMES,
  COUNT(DISTINCT ISOLATION_SOURCE) AS NUM_DISTINCT_ISOLATION_SOURCES,
  COUNT(DISTINCT HOST) AS NUM_DISTINCT_HOSTS,
  (SELECT COUNT(1) FROM KLEBSIELLA_LABELED WHERE IS_HAISEQ = 'Y') AS NUM_HAISEQ,
  COUNT(DISTINCT ISOLATION_SOURCE_RAW) AS NUM_DISTINCT_RAW_ISOLATION_SOURCES,
  COUNT(DISTINCT VIRULENCE_CATEGORY2) AS NUM_DISTINCT_VIRULENCE_CATEGORIES
  FROM
    KLEBSIELLA_LABELED;

SELECT *
  FROM
    KLEBSIELLA_LABELED
    ORDER BY 1
    LIMIT 10;

CACHE TABLE GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL;

CACHE TABLE DOMAIN_ARCHITECTURE;

CACHE TABLE PROTEIN_DETAILS;

CACHE TABLE PROTEIN_DOMAIN_ARCHITECTURE;

CACHE TABLE PROTEIN_VIRULENCE;

DROP TABLE IF EXISTS KLEBSIELLA_LABELED_GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL;

CREATE TABLE KLEBSIELLA_LABELED_GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL
  USING PARQUET
  AS
  SELECT A.*
    FROM
      GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL A
      INNER JOIN KLEBSIELLA_LABELED B ON
        B.ACCESSION_NUMBER = A.ACCESSION_NUMBER;

CACHE TABLE KLEBSIELLA_LABELED_GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL;

SELECT
  COUNT(1) AS NUM_ROWS,
  COUNT(DISTINCT ACCESSION_NUMBER) AS NUM_DISTINCT_GENOMES,
  COUNT(DISTINCT PIVOT_DOMAIN_ARCHITECTURE_UID_KEY) AS NUM_DISTINCT_PIVOTS,
  COUNT(DISTINCT NEIGHBOR_DOMAIN_ARCHITECTURE_UID_KEY) AS NUM_DISTINCT_NEIGHBORS,
  COUNT(DISTINCT NEIGHBOR_TYPE) AS NUM_DISTINCT_TYPES
  FROM
    KLEBSIELLA_LABELED_GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL;

SELECT *
  FROM
    KLEBSIELLA_LABELED_GENOME_PIVOT_NEIGHBOR_DOMAIN_COUNT_FINAL
    ORDER BY 1, 2, 3
    LIMIT 10;
